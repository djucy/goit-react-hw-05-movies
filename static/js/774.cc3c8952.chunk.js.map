{"version":3,"file":"static/js/774.cc3c8952.chunk.js","mappings":"2NACA,EAAuB,mBAAvB,EAAiD,mBAAjD,EAA4E,oBAA5E,EAAuG,mB,SCQxF,SAASA,IACpB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KASA,OAPAC,EAAAA,EAAAA,YAAU,WAGNC,EAAAA,GAAiBN,GACZO,KAAKH,KACX,CAACJ,KAGA,8BACKG,IACG,gBAAKK,UAAWC,EAAhB,cAA+BN,EAAKO,KAAI,gBAAGC,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,KAAMC,EAAvB,EAAuBA,UAAvB,OACpC,gBAAeL,UAAWC,EAA1B,WACI,gBAAKK,IAAKH,EAAY,6CAAyCA,GAAiB,4EAA6EH,UAAWC,EAAaM,IAAKH,KAC1L,cAAGJ,UAAWC,EAAd,SAA2BG,KAC3B,sCAAcC,OAHTD","sources":["webpack://react-homework-template/./src/views/Cast/Cast.module.css?f355","views/Cast/Cast.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"Cast_list__aEIzV\",\"item\":\"Cast_item__4WrzW\",\"image\":\"Cast_image__Wb81U\",\"name\":\"Cast_name__1PqOC\"};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router';\nimport PropTypes from 'prop-types';\nimport * as Api from '../../service/api-fetch';\nimport style from './Cast.module.css';\n\n\n\n\nexport default function Cast() {\n    const { movieId } = useParams();\n    const [cast, setCast] = useState([])\n\n    useEffect(() => {\n\n\n        Api.getMovieCast(movieId)\n            .then(setCast)\n    }, [movieId])\n\n    return (\n        <>\n            {cast && (\n                < ul className={style.list} > {cast.map(({ profile_path, name, character }) => (\n                    <li key={name} className={style.item}>\n                        <img src={profile_path ? `https://image.tmdb.org/t/p/original${profile_path}` : \"https://cdn.pixabay.com/photo/2016/12/13/16/17/dancer-1904467_960_720.png\"} className={style.image} alt={name} />\n                        <p className={style.name}>{name}</p>\n                        <p>Character:{character}</p>\n\n                    </li>))}\n                </ul >)}\n        </>\n    )\n}\n\nCast.propTypes = {\n    cast: PropTypes.shape({\n        profile_path: PropTypes.string.isRequired,\n        name: PropTypes.string.isRequired,\n        character: PropTypes.string.isRequired,\n    }),\n}\n\n"],"names":["Cast","movieId","useParams","useState","cast","setCast","useEffect","Api","then","className","style","map","profile_path","name","character","src","alt"],"sourceRoot":""}