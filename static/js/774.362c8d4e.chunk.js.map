{"version":3,"file":"static/js/774.362c8d4e.chunk.js","mappings":"uQACA,IAAMA,EAAW,+BACXC,EAAU,mCAET,SAASC,EAAcC,GAC1B,OAAOC,MAAM,GAAD,OACLJ,EADK,uCACkCC,EADlC,iBACkDE,IACzDE,MAAK,SAAAC,GACF,OAAIA,EAASC,GACFD,EAASE,OAEbC,QAAQC,SACX,IAAIC,MAAM,yBAGpBN,MAAK,SAAAC,GAAQ,OAAIA,EAASM,WAIzB,SAASC,EAAcC,EAAMX,GAChC,OAAOC,MAAM,IAAD,OACJJ,EADI,iCAC6BC,EAD7B,kBAC8Ca,EAD9C,gCAC2EX,EAD3E,0BAEHE,MAAK,SAAAC,GACF,OAAIA,EAASC,GACFD,EAASE,OAEbC,QAAQC,SACX,IAAIC,MAAM,yBAGrBN,MAAK,SAAAC,GAAQ,OAAGA,EAASM,WAI3B,SAASG,EAAaC,GACzB,OAAOZ,MAAM,IAAD,OACLJ,EADK,kBACagB,EADb,oBACgCf,EADhC,oBAEPI,MAAK,SAAAC,GACF,OAAIA,EAASC,GACFD,EAASE,OAEbC,QAAQC,SACP,IAAIC,MAAM,yBAItB,SAASM,EAAaD,GACtB,OAAOZ,MAAM,GAAD,OACLJ,EADK,kBACagB,EADb,4BACwCf,EADxC,oBAEPI,MAAK,SAAAC,GACF,OAAIA,EAASC,GACFD,EAASE,OAEbC,QAAQC,SACX,IAAIC,MAAM,yBAGxBN,MAAK,SAAAC,GAAQ,OAAIA,EAASY,QAGzB,SAASC,EAAiBH,GAC7B,OAAOZ,MAAM,GAAD,OACLJ,EADK,kBACagB,EADb,4BACwCf,EADxC,2BAEPI,MAAK,SAAAC,GACF,OAAIA,EAASC,GACFD,EAASE,OAEbC,QAAQC,SACX,IAAIC,MAAM,yBAGrBN,MAAK,SAAAC,GAAQ,OAAIA,EAASM,a,yGCtE/B,EAAuB,mBAAvB,EAAiD,mBAAjD,EAA4E,oBAA5E,EAAuG,mB,SCOxF,SAASQ,IACpB,IAAQJ,GAAYK,EAAAA,EAAAA,MAAZL,QACR,GAAwBM,EAAAA,EAAAA,UAAS,IAAjC,eAAOJ,EAAP,KAAaK,EAAb,KASA,OAPAC,EAAAA,EAAAA,YAAU,WAGNC,EAAAA,GAAiBT,GACZX,KAAKkB,KACX,CAACP,KAGA,8BACKE,IACG,gBAAKQ,UAAYC,EAAjB,cAAgCT,EAAKU,KAAI,gBAAGC,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,KAAMC,EAAvB,EAAuBA,UAAvB,EAAiCC,OAAjC,OACrC,gBAAeN,UAAWC,EAA1B,WACI,gBAAKM,IAAKJ,EAAa,sCAAD,OAAuCA,GAAe,4EAA6EH,UAAWC,EAAaO,IAAKJ,KACtL,cAAGJ,UAAWC,EAAd,SAA4BG,KAC5C,sCAAcC,OAHOD","sources":["service/api-fetch.js","webpack://react-homework-template/./src/views/Cast/Cast.module.css?f355","views/Cast/Cast.js"],"sourcesContent":["//   const [filmes, setFilmes] = useState([]);\nconst BASE_URL = \"https://api.themoviedb.org/3\";\nconst API_KEY = \"e32d0a5f8ee39ad2c612579abb31460d\"\n\nexport function fetchGetFilms(page) {\n    return fetch(\n        `${BASE_URL}/trending/movie/day?api_key=${API_KEY}&page=${page}`)\n        .then(response => {\n            if (response.ok) {\n                return response.json();\n            }\n            return Promise.rejected(\n                new Error(\"Please, try again\")\n            );\n        })\n     .then(response => response.results)\n        // .then(filmes => setFilmes([...filmes]));\n}\n \nexport function fetchGetMovie(query,page) {\n    return fetch(\n        ` ${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=${page}&include_adult=false `)\n            .then(response => {\n                if (response.ok) {\n                    return response.json();\n                }\n                return Promise.rejected(\n                    new Error(\"Please, try again\")\n                );\n            })\n        .then(response =>response.results)\n    \n }\n\nexport function getMovieById(movieId) {\n    return fetch(\n       ` ${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`)\n        .then(response => {\n            if (response.ok) {\n                return response.json();\n            }\n            return Promise.rejected(\n                    new Error(\"Please, try again\")\n                );\n        })\n    }\n export function getMovieCast(movieId) {\n        return fetch(\n            `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`)\n            .then(response => {\n                if (response.ok) {\n                    return response.json();\n                }\n                return Promise.rejected(\n                    new Error(\"Please, try again\")\n                );\n            })\n     .then(response => response.cast)\n }\n    \nexport function getMoviesReviews(movieId) {\n    return fetch(\n        `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`)\n        .then(response => {\n            if (response.ok) {\n                return response.json();\n            }\n            return Promise.rejected(\n                new Error(\"Please, try again\")\n            );\n        })\n    .then(response => response.results)\n }\n    // .then(response =>response.results)\n \n\n// const api = {\n//   fetchSearchName,\n// };\n// export default api;\n\n// const BASE_URL = \"https://api.themoviedb.org/3\";\n// const MY_KEY = \"e32d0a5f8ee39ad2c612579abb31460d\";\n\n// async function fetchErrorHandling(url = \"\", config = {}) {\n//   const response = await fetch(url, config);\n//   return response.ok\n//     ? await response.json()\n//     : Promise.reject(new Error(\"Something went wrong\"));\n// }\n// export async function fetchTrending() {\n//   return fetchErrorHandling(`${BASE_URL}/trending/movie/day?api_key=${MY_KEY}`);\n// }","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"Cast_list__aEIzV\",\"item\":\"Cast_item__4WrzW\",\"image\":\"Cast_image__Wb81U\",\"name\":\"Cast_name__1PqOC\"};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router';\nimport * as Api from '../../service/api-fetch';\nimport style from './Cast.module.css';\n\n\n\n\nexport default function Cast() {\n    const { movieId } = useParams();\n    const [cast, setCast] = useState([])\n\n    useEffect(() => {\n   \n\n        Api.getMovieCast(movieId)\n            .then(setCast)\n    }, [movieId])\n   \n    return (\n        <>\n            {cast && (\n                < ul className={ style.list} > {cast.map(({ profile_path, name, character,gender }) => (\n                    <li key={name} className={style.item}>\n                        <img src={profile_path?`https://image.tmdb.org/t/p/original${profile_path}`:\"https://cdn.pixabay.com/photo/2016/12/13/16/17/dancer-1904467_960_720.png\"} className={style.image} alt={name}/>\n                        <p className={style.name }>{name}</p>\n        <p>Character:{character}</p>\n\n    </li>))}\n        </ul >)}\n       </> \n    )\n}\n \n\n//  {cast && (\n//                 < ul className={ style.list} > {cast.map(({ profile_path, name, character,gender }) => (\n//                     <li key={name} className={style.item}>\n//                         <img src={`https://image.tmdb.org/t/p/original${profile_path}`} className={style.image} alt={name}/>\n//         <p>{name}</p>\n//         <p>Character:{character}</p>\n\n//     </li>))}\n//         </ul >)}"],"names":["BASE_URL","API_KEY","fetchGetFilms","page","fetch","then","response","ok","json","Promise","rejected","Error","results","fetchGetMovie","query","getMovieById","movieId","getMovieCast","cast","getMoviesReviews","Cast","useParams","useState","setCast","useEffect","Api","className","style","map","profile_path","name","character","gender","src","alt"],"sourceRoot":""}