{"version":3,"file":"static/js/774.ed9a3176.chunk.js","mappings":"uQACA,IAAMA,EAAW,+BACXC,EAAU,mCAET,SAASC,IACZ,OAAOC,MAAM,GAAD,OACLH,EADK,uCACkCC,IACzCG,MAAK,SAAAC,GACF,OAAIA,EAASC,GACFD,EAASE,OAEbC,QAAQC,SACX,IAAIC,MAAM,yBAGpBN,MAAK,SAAAC,GAAQ,OAAIA,EAASM,WAIzB,SAASC,EAAcC,EAAMC,GAChC,OAAOX,MAAM,IAAD,OACJH,EADI,iCAC6BC,EAD7B,kBAC8CY,EAD9C,gCAC2EC,EAD3E,0BAEHV,MAAK,SAAAC,GACF,OAAIA,EAASC,GACFD,EAASE,OAEbC,QAAQC,SACX,IAAIC,MAAM,yBAGrBN,MAAK,SAAAC,GAAQ,OAAGA,EAASM,WAI3B,SAASI,EAAaC,GACzB,OAAOb,MAAM,IAAD,OACLH,EADK,kBACagB,EADb,oBACgCf,EADhC,oBAEPG,MAAK,SAAAC,GACF,OAAIA,EAASC,GACFD,EAASE,OAEbC,QAAQC,SACP,IAAIC,MAAM,yBAItB,SAASO,EAAaD,GACtB,OAAOb,MAAM,GAAD,OACLH,EADK,kBACagB,EADb,4BACwCf,EADxC,oBAEPG,MAAK,SAAAC,GACF,OAAIA,EAASC,GACFD,EAASE,OAEbC,QAAQC,SACX,IAAIC,MAAM,yBAGxBN,MAAK,SAAAC,GAAQ,OAAIA,EAASa,QAGzB,SAASC,EAAiBH,GAC7B,OAAOb,MAAM,GAAD,OACLH,EADK,kBACagB,EADb,4BACwCf,EADxC,2BAEPG,MAAK,SAAAC,GACF,OAAIA,EAASC,GACFD,EAASE,OAEbC,QAAQC,SACX,IAAIC,MAAM,yBAGrBN,MAAK,SAAAC,GAAQ,OAAIA,EAASM,a,yGCtE/B,EAAwB,oB,SCOT,SAASS,IACpB,IAAQJ,GAAYK,EAAAA,EAAAA,MAAZL,QACR,GAAwBM,EAAAA,EAAAA,UAAS,IAAjC,eAAOJ,EAAP,KAAaK,EAAb,KASA,OAPAC,EAAAA,EAAAA,YAAU,WAGNC,EAAAA,GAAiBT,GACZZ,KAAKmB,KACX,CAACP,KAGA,8BACKE,IACG,8BAAQA,EAAKQ,KAAI,gBAAGC,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,KAAMC,EAAvB,EAAuBA,UAAvB,OAC7B,2BACoB,gBAAKC,IAAG,6CAAwCH,GAAgBI,UAAWC,EAAaC,IAAKL,KAC7G,uBAAIA,KACJ,sCAAcC,OAHTD","sources":["service/api-fetch.js","webpack://react-homework-template/./src/views/Cast/Cast.module.css?f355","views/Cast/Cast.js"],"sourcesContent":["//   const [filmes, setFilmes] = useState([]);\nconst BASE_URL = \"https://api.themoviedb.org/3\";\nconst API_KEY = \"e32d0a5f8ee39ad2c612579abb31460d\"\n\nexport function fetchGetFilms() {\n    return fetch(\n        `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`)\n        .then(response => {\n            if (response.ok) {\n                return response.json();\n            }\n            return Promise.rejected(\n                new Error(\"Please, try again\")\n            );\n        })\n     .then(response => response.results)\n        // .then(filmes => setFilmes([...filmes]));\n}\n \nexport function fetchGetMovie(query,page) {\n    return fetch(\n        ` ${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=${page}&include_adult=false `)\n            .then(response => {\n                if (response.ok) {\n                    return response.json();\n                }\n                return Promise.rejected(\n                    new Error(\"Please, try again\")\n                );\n            })\n        .then(response =>response.results)\n    \n }\n\nexport function getMovieById(movieId) {\n    return fetch(\n       ` ${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`)\n        .then(response => {\n            if (response.ok) {\n                return response.json();\n            }\n            return Promise.rejected(\n                    new Error(\"Please, try again\")\n                );\n        })\n    }\n export function getMovieCast(movieId) {\n        return fetch(\n            `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`)\n            .then(response => {\n                if (response.ok) {\n                    return response.json();\n                }\n                return Promise.rejected(\n                    new Error(\"Please, try again\")\n                );\n            })\n     .then(response => response.cast)\n }\n    \nexport function getMoviesReviews(movieId) {\n    return fetch(\n        `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`)\n        .then(response => {\n            if (response.ok) {\n                return response.json();\n            }\n            return Promise.rejected(\n                new Error(\"Please, try again\")\n            );\n        })\n    .then(response => response.results)\n }\n    // .then(response =>response.results)\n \n\n// const api = {\n//   fetchSearchName,\n// };\n// export default api;\n\n// const BASE_URL = \"https://api.themoviedb.org/3\";\n// const MY_KEY = \"e32d0a5f8ee39ad2c612579abb31460d\";\n\n// async function fetchErrorHandling(url = \"\", config = {}) {\n//   const response = await fetch(url, config);\n//   return response.ok\n//     ? await response.json()\n//     : Promise.reject(new Error(\"Something went wrong\"));\n// }\n// export async function fetchTrending() {\n//   return fetchErrorHandling(`${BASE_URL}/trending/movie/day?api_key=${MY_KEY}`);\n// }","// extracted by mini-css-extract-plugin\nexport default {\"image\":\"Cast_image__Wb81U\"};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router';\nimport * as Api from '../../service/api-fetch';\nimport style from './Cast.module.css';\n\n\n\n\nexport default function Cast() {\n    const { movieId } = useParams();\n    const [cast, setCast] = useState([])\n\n    useEffect(() => {\n   \n\n        Api.getMovieCast(movieId)\n            .then(setCast)\n    }, [movieId])\n   \n    return (\n        <>\n            {cast && (\n                < ul > {cast.map(({ profile_path, name, character }) => (\n    <li key={name}>\n                        <img src={`https://image.tmdb.org/t/p/original${profile_path}`} className={style.image} alt={name}/>\n        <p>{name}</p>\n        <p>Character:{character}</p>\n\n    </li>))}\n        </ul >)}\n       </> \n    )\n }"],"names":["BASE_URL","API_KEY","fetchGetFilms","fetch","then","response","ok","json","Promise","rejected","Error","results","fetchGetMovie","query","page","getMovieById","movieId","getMovieCast","cast","getMoviesReviews","Cast","useParams","useState","setCast","useEffect","Api","map","profile_path","name","character","src","className","style","alt"],"sourceRoot":""}