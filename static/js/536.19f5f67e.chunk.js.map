{"version":3,"file":"static/js/536.19f5f67e.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/FilmList/FilmList.module.css?b497","components/FilmList/FilmList.jsx","service/api-fetch.js","components/SearchMovieForm/SearchMovieForm.jsx","components/Button/Button.jsx","views/MoviesPage/MoviesPage.jsx","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"image\":\"FilmList_image__EaCd0\",\"list\":\"FilmList_list__C2ysn\",\"item\":\"FilmList_item__uEK9y\",\"title\":\"FilmList_title__gplOY\"};","\nimport { Link,  useNavigate,useLocation } from 'react-router-dom';\nimport style from './FilmList.module.css';\n// import Button from '../Button/Button';\n// import Film from '../Film/Film';\n\nexport default function FilmList({ filmes,value }) {\n    const location = useLocation();\n    let navigate = useNavigate();\n    console.log(location);\n    console.log(navigate);\n    // const onMovieClick = (id) => {\n    //     onClick(id);\n    //  }\n    console.log(filmes.length)\n    return (\n        <>\n            <ul className={style.list}>\n            {filmes.map(({ id, poster_path, title }) => (\n                <Link to=\n                    {{\n                        pathname: `/movies/${id}`,\n                        // state: { from: location },\n    //                     navigate:{\n    //   ...location,\n    //   search: `query=${value}`,\n    // }\n                        \n                    }} className={style.item } key={id}><li id={id} key={id}>\n                    <img src={`https://image.tmdb.org/t/p/original${poster_path}`} alt={title} className={style.image}  />\n                        <p className={ style.title}>{title}</p>\n            </li></Link>\n\n        \n))}\n            </ul>\n            {/* {filmes.length===20 && <Button/>} */}\n            </>\n\n    )\n\n}\n\n\n// import { useNavigate } from \"react-router-dom\";\n\n// function SignupForm() {\n//   let navigate = useNavigate();\n\n//   async function handleSubmit(event) {\n//     event.preventDefault();\n//     await submitForm(event.target);\n//     navigate(\"../success\", { replace: true });\n//   }\n\n//   return <form onSubmit={handleSubmit}>{/* ... */}</form>;\n\n\n\n            // <Film key={id} image={`https://image.tmdb.org/t/p/original${poster_path}`} title={title} alt={title} id={id} />","//   const [filmes, setFilmes] = useState([]);\nconst BASE_URL = \"https://api.themoviedb.org/3\";\nconst API_KEY = \"e32d0a5f8ee39ad2c612579abb31460d\"\n\nexport function fetchGetFilms() {\n    return fetch(\n        `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`)\n        .then(response => {\n            if (response.ok) {\n                return response.json();\n            }\n            return Promise.rejected(\n                new Error(\"Please, try again\")\n            );\n        })\n     .then(response => response.results)\n        // .then(filmes => setFilmes([...filmes]));\n}\n \nexport function fetchGetMovie(query,page) {\n    return fetch(\n        ` ${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=${page}&include_adult=false `)\n            .then(response => {\n                if (response.ok) {\n                    return response.json();\n                }\n                return Promise.rejected(\n                    new Error(\"Please, try again\")\n                );\n            })\n        .then(response =>response.results)\n    \n }\n\nexport function getMovieById(movieId) {\n    return fetch(\n       ` ${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`)\n        .then(response => {\n            if (response.ok) {\n                return response.json();\n            }\n            return Promise.rejected(\n                    new Error(\"Please, try again\")\n                );\n        })\n    }\n export function getMovieCast(movieId) {\n        return fetch(\n            `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`)\n            .then(response => {\n                if (response.ok) {\n                    return response.json();\n                }\n                return Promise.rejected(\n                    new Error(\"Please, try again\")\n                );\n            })\n     .then(response => response.cast)\n }\n    \nexport function getMoviesReviews(movieId) {\n    return fetch(\n        `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`)\n        .then(response => {\n            if (response.ok) {\n                return response.json();\n            }\n            return Promise.rejected(\n                new Error(\"Please, try again\")\n            );\n        })\n    .then(response => response.results)\n }\n    // .then(response =>response.results)\n \n\n// const api = {\n//   fetchSearchName,\n// };\n// export default api;\n\n// const BASE_URL = \"https://api.themoviedb.org/3\";\n// const MY_KEY = \"e32d0a5f8ee39ad2c612579abb31460d\";\n\n// async function fetchErrorHandling(url = \"\", config = {}) {\n//   const response = await fetch(url, config);\n//   return response.ok\n//     ? await response.json()\n//     : Promise.reject(new Error(\"Something went wrong\"));\n// }\n// export async function fetchTrending() {\n//   return fetchErrorHandling(`${BASE_URL}/trending/movie/day?api_key=${MY_KEY}`);\n// }","import { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nexport default function SearchMovieForm({onSubmit }) {\n    const [query, setQuery] = useState('');\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if (query.trim() === '') {\n            return toast.warn('Введите название фильма!', {\n                theme: 'colored',\n            });\n        }\n        onSubmit(query);\n        setQuery('');\n        console.log(\"movie\");\n    }\n\n    const handleQueryChange=e => {\n        setQuery(e.target.value.toLowerCase());\n    }\n    return (\n        <form onSubmit={handleSubmit }>\n            <input \n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search movies\"\n                value={ query}\n            onChange={handleQueryChange}></input>\n            <button type=\"submit\">GO!</button>\n\n</form>\n\n\n\n\n    )\n\n\n\n\n\n\n }","export default function Button({onLoadMore }) {\n    // const onClick = (e) => { console.log(e.target.value)}\n    return (\n        <button type=\"button\" onClick={onLoadMore}>Download more</button>)\n    \n }","import { useState, useEffect } from 'react';\nimport SearchMovieForm from '../../components/SearchMovieForm/SearchMovieForm';\nimport * as Api from '../../service/api-fetch';\nimport FilmList from '../../components/FilmList/FilmList';\nimport Button from '../../components/Button/Button';\n\nexport default function MoviesPage() {\n    const [movies, setMovies] = useState([]);\n    const [query, setQuery] = useState('');\n    const [page, setPage] = useState(1);\n\n    const onSearchMovie = query => setQuery(query);\n\n    useEffect(() => {\n        if (query === '') {\n            return;\n         }\n        setMovies([]);\n     Api.fetchGetMovie(query,page)\n        .then(newArrayMovies => {\n            setMovies(state => [...state, ...newArrayMovies]);\n            // setPage(page)\n        })\n    \n}, [query,page])\n    \n    const downloadMore = () => {\n        console.log('tap')\n        setPage(page=>page+1)\n     }\n//      useEffect(() => {\n//     if (searchName === '') {\n//       return\n//      }\n//     setStatus(Status.PENDING);\n//     setImages([]);\n//    getImages();\n//     scroll.scrollToTop();\n   \n//   }, [searchName]);\n\n    return (\n<>\n         \n            <SearchMovieForm onSubmit={onSearchMovie}></SearchMovieForm>\n            {movies && <FilmList filmes={movies}></FilmList>}\n            {movies.length === 20 && <Button onLoadMore={downloadMore}/>}\n</>\n    )\n\n\n\n\n\n }","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"names":["FilmList","filmes","location","value","useLocation","navigate","useNavigate","console","log","length","className","style","map","id","poster_path","title","to","pathname","src","alt","BASE_URL","API_KEY","fetchGetFilms","fetch","then","response","ok","json","Promise","rejected","Error","results","fetchGetMovie","query","page","getMovieById","movieId","getMovieCast","cast","getMoviesReviews","SearchMovieForm","onSubmit","useState","setQuery","e","preventDefault","trim","toast","theme","type","autoComplete","autoFocus","placeholder","onChange","target","toLowerCase","Button","onLoadMore","onClick","MoviesPage","movies","setMovies","setPage","useEffect","Api","newArrayMovies","state","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError"],"sourceRoot":""}