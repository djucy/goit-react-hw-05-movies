{"version":3,"file":"static/js/63.d6c25785.chunk.js","mappings":"2LACA,EAAwB,wBAAxB,EAAuD,uBAAvD,EAAqF,uBAArF,EAAoH,wB,SCKrG,SAASA,EAAT,GAAqC,IAAjBC,EAAgB,EAAhBA,OACzBC,GADyC,EAATC,OACrBC,EAAAA,EAAAA,OACbC,GAAWC,EAAAA,EAAAA,MAOf,OANAC,QAAQC,IAAIN,GACZK,QAAQC,IAAIH,GAIZE,QAAQC,IAAIP,EAAOQ,SAEf,+BACI,eAAIC,UAAWC,EAAf,SACCV,EAAOW,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,YAAaC,EAApB,EAAoBA,MAApB,OACR,SAAC,KAAD,CAAMC,GACD,CACGC,SAAS,WAAD,OAAaJ,IAOtBH,UAAWC,EATlB,UASwC,gBAAIE,GAAIA,EAAR,WACpC,gBAAKK,IAAG,6CAAwCJ,GAAeK,IAAKJ,EAAOL,UAAWC,KAClF,cAAGD,UAAYC,EAAf,SAA6BI,MAFoBF,IAArBA,Y,qJC3BpD,IAAMO,EAAW,+BACXC,EAAU,mCAET,SAASC,IACZ,OAAOC,MAAM,GAAD,OACLH,EADK,uCACkCC,IACzCG,MAAK,SAAAC,GACF,OAAIA,EAASC,GACFD,EAASE,OAEbC,QAAQC,SACX,IAAIC,MAAM,yBAGpBN,MAAK,SAAAC,GAAQ,OAAIA,EAASM,WAIzB,SAASC,EAAcC,EAAMC,GAChC,OAAOX,MAAM,IAAD,OACJH,EADI,iCAC6BC,EAD7B,kBAC8CY,EAD9C,gCAC2EC,EAD3E,0BAEHV,MAAK,SAAAC,GACF,OAAIA,EAASC,GACFD,EAASE,OAEbC,QAAQC,SACX,IAAIC,MAAM,yBAGrBN,MAAK,SAAAC,GAAQ,OAAGA,EAASM,WAI3B,SAASI,EAAaC,GACzB,OAAOb,MAAM,IAAD,OACLH,EADK,kBACagB,EADb,oBACgCf,EADhC,oBAEPG,MAAK,SAAAC,GACF,OAAIA,EAASC,GACFD,EAASE,OAEbC,QAAQC,SACP,IAAIC,MAAM,yBAItB,SAASO,EAAaD,GACtB,OAAOb,MAAM,GAAD,OACLH,EADK,kBACagB,EADb,4BACwCf,EADxC,oBAEPG,MAAK,SAAAC,GACF,OAAIA,EAASC,GACFD,EAASE,OAEbC,QAAQC,SACX,IAAIC,MAAM,yBAGxBN,MAAK,SAAAC,GAAQ,OAAIA,EAASa,QAGzB,SAASC,EAAiBH,GAC7B,OAAOb,MAAM,GAAD,OACLH,EADK,kBACagB,EADb,4BACwCf,EADxC,2BAEPG,MAAK,SAAAC,GACF,OAAIA,EAASC,GACFD,EAASE,OAEbC,QAAQC,SACX,IAAIC,MAAM,yBAGrBN,MAAK,SAAAC,GAAQ,OAAIA,EAASM,a,0HChEhB,SAASS,IACpB,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOxC,EAAP,KAAeyC,EAAf,KAWD,OAVCC,EAAAA,EAAAA,YAAU,WACN,OAAOC,EAAAA,KAGFpB,MAAK,SAAAqB,GACFH,GAAU,SAAAI,GAAK,wBAAQA,IAAR,OAAkBD,YAG1C,KAGD,8BAEM5C,IAAU,SAAC,IAAD,CAAUA,OAAQA,Q,8EClBzB,SAAS8C,EAAmBC,GACzC,OCJa,SAA4BA,GACzC,GAAIC,MAAMC,QAAQF,GAAM,OAAO,EAAAG,EAAA,GAAiBH,GDGzC,CAAkBA,IELZ,SAA0BI,GACvC,GAAsB,qBAAXC,QAAmD,MAAzBD,EAAKC,OAAOC,WAA2C,MAAtBF,EAAK,cAAuB,OAAOH,MAAMM,KAAKH,GFInF,CAAgBJ,KAAQ,EAAAQ,EAAA,GAA2BR,IGLvE,WACb,MAAM,IAAIS,UAAU,wIHIwE","sources":["webpack://react-homework-template/./src/components/FilmList/FilmList.module.css?b497","components/FilmList/FilmList.jsx","service/api-fetch.js","views/HomePage/HomePage.jsx","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"image\":\"FilmList_image__EaCd0\",\"list\":\"FilmList_list__C2ysn\",\"item\":\"FilmList_item__uEK9y\",\"title\":\"FilmList_title__gplOY\"};","\nimport { Link,  useNavigate,useLocation } from 'react-router-dom';\nimport style from './FilmList.module.css';\n// import Button from '../Button/Button';\n// import Film from '../Film/Film';\n\nexport default function FilmList({ filmes,value }) {\n    const location = useLocation();\n    let navigate = useNavigate();\n    console.log(location);\n    console.log(navigate);\n    // const onMovieClick = (id) => {\n    //     onClick(id);\n    //  }\n    console.log(filmes.length)\n    return (\n        <>\n            <ul className={style.list}>\n            {filmes.map(({ id, poster_path, title }) => (\n                <Link to=\n                    {{\n                        pathname: `/movies/${id}`,\n                        // state: { from: location },\n    //                     navigate:{\n    //   ...location,\n    //   search: `query=${value}`,\n    // }\n                        \n                    }} className={style.item } key={id}><li id={id} key={id}>\n                    <img src={`https://image.tmdb.org/t/p/original${poster_path}`} alt={title} className={style.image}  />\n                        <p className={ style.title}>{title}</p>\n            </li></Link>\n\n        \n))}\n            </ul>\n            {/* {filmes.length===20 && <Button/>} */}\n            </>\n\n    )\n\n}\n\n\n// import { useNavigate } from \"react-router-dom\";\n\n// function SignupForm() {\n//   let navigate = useNavigate();\n\n//   async function handleSubmit(event) {\n//     event.preventDefault();\n//     await submitForm(event.target);\n//     navigate(\"../success\", { replace: true });\n//   }\n\n//   return <form onSubmit={handleSubmit}>{/* ... */}</form>;\n\n\n\n            // <Film key={id} image={`https://image.tmdb.org/t/p/original${poster_path}`} title={title} alt={title} id={id} />","//   const [filmes, setFilmes] = useState([]);\nconst BASE_URL = \"https://api.themoviedb.org/3\";\nconst API_KEY = \"e32d0a5f8ee39ad2c612579abb31460d\"\n\nexport function fetchGetFilms() {\n    return fetch(\n        `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`)\n        .then(response => {\n            if (response.ok) {\n                return response.json();\n            }\n            return Promise.rejected(\n                new Error(\"Please, try again\")\n            );\n        })\n     .then(response => response.results)\n        // .then(filmes => setFilmes([...filmes]));\n}\n \nexport function fetchGetMovie(query,page) {\n    return fetch(\n        ` ${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=${page}&include_adult=false `)\n            .then(response => {\n                if (response.ok) {\n                    return response.json();\n                }\n                return Promise.rejected(\n                    new Error(\"Please, try again\")\n                );\n            })\n        .then(response =>response.results)\n    \n }\n\nexport function getMovieById(movieId) {\n    return fetch(\n       ` ${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`)\n        .then(response => {\n            if (response.ok) {\n                return response.json();\n            }\n            return Promise.rejected(\n                    new Error(\"Please, try again\")\n                );\n        })\n    }\n export function getMovieCast(movieId) {\n        return fetch(\n            `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`)\n            .then(response => {\n                if (response.ok) {\n                    return response.json();\n                }\n                return Promise.rejected(\n                    new Error(\"Please, try again\")\n                );\n            })\n     .then(response => response.cast)\n }\n    \nexport function getMoviesReviews(movieId) {\n    return fetch(\n        `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`)\n        .then(response => {\n            if (response.ok) {\n                return response.json();\n            }\n            return Promise.rejected(\n                new Error(\"Please, try again\")\n            );\n        })\n    .then(response => response.results)\n }\n    // .then(response =>response.results)\n \n\n// const api = {\n//   fetchSearchName,\n// };\n// export default api;\n\n// const BASE_URL = \"https://api.themoviedb.org/3\";\n// const MY_KEY = \"e32d0a5f8ee39ad2c612579abb31460d\";\n\n// async function fetchErrorHandling(url = \"\", config = {}) {\n//   const response = await fetch(url, config);\n//   return response.ok\n//     ? await response.json()\n//     : Promise.reject(new Error(\"Something went wrong\"));\n// }\n// export async function fetchTrending() {\n//   return fetchErrorHandling(`${BASE_URL}/trending/movie/day?api_key=${MY_KEY}`);\n// }","import { useState,useEffect } from 'react';\nimport * as Api from '../../service/api-fetch.js';\nimport FilmList from '../../components/FilmList/FilmList';\n\n\n\n\nexport default function HomePage() {\n    const [filmes, setFilmes] = useState([]);\n    useEffect(() => {\n        return Api.fetchGetFilms()\n            // .then(response => response.results)\n            // .then(setFilmes)\n            .then(newArrayFilmes => {\n                setFilmes(state => [...state, ...newArrayFilmes]);\n            })\n        \n    }, []);\n\n   return (\n      <>\n     \n           {filmes && <FilmList filmes={filmes} ></FilmList>} \n          \n           </>\n     )\n }\n// export default function HomePage() {\n//     const [films, setFilms] = useState([]);\n\n//   useEffect(() => {\n//     return API.fetchTrending()\n//       .then((response) => [...films, ...response.results])\n//       .then(setFilms);\n//   }, []);\n//     return (\n//         <h1>Hello</h1>\n//     )\n// }\n// image = { filmes.backdrop_path } title = { filmes.title } id = { filmes.id }","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"names":["FilmList","filmes","location","value","useLocation","navigate","useNavigate","console","log","length","className","style","map","id","poster_path","title","to","pathname","src","alt","BASE_URL","API_KEY","fetchGetFilms","fetch","then","response","ok","json","Promise","rejected","Error","results","fetchGetMovie","query","page","getMovieById","movieId","getMovieCast","cast","getMoviesReviews","HomePage","useState","setFilmes","useEffect","Api","newArrayFilmes","state","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError"],"sourceRoot":""}