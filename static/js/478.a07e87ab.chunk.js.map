{"version":3,"file":"static/js/478.a07e87ab.chunk.js","mappings":"oOACA,EAA4B,mCAA5B,EAA4E,oCAA5E,EAAqI,4CAArI,EAA6M,mDAA7M,EAAoR,2C,SCUrQ,SAASA,EAAT,GAAwC,IAAbC,EAAY,EAAZA,SACtC,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAuBA,OACI,gBAAKC,UAAWC,EAAhB,UACI,kBAAML,SAnBO,SAACM,GAElB,GADAA,EAAEC,iBACmB,KAAjBL,EAAMM,OACN,OAAOC,EAAAA,GAAAA,KAAW,oIAA4B,CAC1CC,MAAO,YAKfV,EAASE,GACTC,EAAS,KASyBC,UAAWC,EAAzC,WACI,mBAAQM,KAAK,SAASP,UAAWC,EAAjC,UACI,iBAAMD,UAAWC,EAAjB,uBAEJ,kBACIM,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,gBACZC,MAAOb,EACPc,SAfU,SAAAV,GACtBH,EAASG,EAAEW,OAAOF,MAAMG,gBAeZd,UAAWC,S,+BCvChB,SAASc,IACpB,OAA4BlB,EAAAA,EAAAA,UAAS,IAArC,eAAOmB,EAAP,KAAeC,EAAf,KACA,GAAwBpB,EAAAA,EAAAA,UAAS,GAAjC,eAAOqB,EAAP,KAAaC,EAAb,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMxB,EAAQuB,EAAaE,IAAI,UAO/BC,EAAAA,EAAAA,YAAU,WACD1B,IAGLmB,EAAU,IACVQ,EAAAA,GAAkB3B,EAAOoB,GACpBQ,MAAK,SAAAC,GACFV,GAAU,SAAAW,GAAK,wBAAQA,IAAR,OAAkBD,aAI1C,CAAC7B,EAAOoB,IAWX,OACI,iCAEI,SAACvB,EAAD,CAAiBC,SATH,SAAAe,GAElBW,EAAgB,CAAExB,MAAM,GAAD,OAAKa,QAQvBK,IAAU,SAACa,EAAA,EAAD,CAAUC,OAAQd,IACV,KAAlBA,EAAOe,SAAiB,SAACC,EAAA,EAAD,CAAQC,WAdpB,WACjBd,GAAQ,SAAAD,GAAI,OAAIA,EAAO","sources":["webpack://react-homework-template/./src/components/SearchMovieForm/SearchMovieForm.module.css?dfe9","components/SearchMovieForm/SearchMovieForm.jsx","views/MoviesPage/MoviesPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"searchbar\":\"SearchMovieForm_searchbar__W7MeV\",\"searchForm\":\"SearchMovieForm_searchForm__XEN1f\",\"searchForm__button\":\"SearchMovieForm_searchForm__button__UqM2h\",\"searchForm__button__label\":\"SearchMovieForm_searchForm__button__label__kRULR\",\"searchForm__input\":\"SearchMovieForm_searchForm__input__SCBSH\"};","import { useState } from 'react';\n// import { createBrowserHistory } from \"history\";\nimport { toast } from 'react-toastify';\n// import {\n\n//     useLocation,\n// } from 'react-router-dom';\nimport 'react-toastify/dist/ReactToastify.css';\nimport PropTypes from 'prop-types';\nimport style from 'components/SearchMovieForm/SearchMovieForm.module.css'\n\nexport default function SearchMovieForm({ onSubmit }) {\n    const [query, setQuery] = useState('');\n    // const history = createBrowserHistory();\n    // const location = useLocation();\n    // console.log(location);\n\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if (query.trim() === '') {\n            return toast.warn('Введите название фильма!', {\n                theme: 'colored',\n            });\n        }\n        // history.push({ ...location, search: `query=${query}` });\n\n        onSubmit(query);\n        setQuery('');\n\n    }\n\n    const handleQueryChange = e => {\n        setQuery(e.target.value.toLowerCase());\n    }\n    return (\n        <div className={style.searchbar}>\n            <form onSubmit={handleSubmit} className={style.searchForm}>\n                <button type=\"submit\" className={style.searchForm__button}>\n                    <span className={style.searchForm__button__label}>Search</span>\n                </button>\n                <input\n                    type=\"text\"\n                    autoComplete=\"off\"\n                    autoFocus\n                    placeholder=\"Search movies\"\n                    value={query}\n                    onChange={handleQueryChange}\n                    className={style.searchForm__input}></input>\n            </form>\n        </div>\n    )\n}\nSearchMovieForm.propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n}","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\n\nimport SearchMovieForm from '../../components/SearchMovieForm/SearchMovieForm';\nimport * as Api from '../../service/api-fetch';\nimport FilmList from '../../components/FilmList/FilmList';\nimport Button from '../../components/Button/Button';\n\nexport default function MoviesPage() {\n    const [movies, setMovies] = useState([]);\n    const [page, setPage] = useState(1);\n    const [searchParams, setSearchParams] = useSearchParams();\n    const query = searchParams.get('query');\n\n\n\n\n\n\n    useEffect(() => {\n        if (!query) {\n            return;\n        }\n        setMovies([]);\n        Api.fetchGetMovie(query, page)\n            .then(newArrayMovies => {\n                setMovies(state => [...state, ...newArrayMovies]);\n                // setPage(page)\n            })\n\n    }, [query, page])\n\n    const downloadMore = () => {\n        setPage(page => page + 1)\n    }\n    const onSearchMovie = value => {\n\n        setSearchParams({ query: `${value}` });\n\n    };\n\n    return (\n        <>\n\n            <SearchMovieForm onSubmit={onSearchMovie}></SearchMovieForm>\n            {movies && <FilmList filmes={movies}></FilmList>}\n            {movies.length === 20 && <Button onLoadMore={downloadMore} />}\n        </>\n    )\n\n\n\n\n\n}\n//  value={query}"],"names":["SearchMovieForm","onSubmit","useState","query","setQuery","className","style","e","preventDefault","trim","toast","theme","type","autoComplete","autoFocus","placeholder","value","onChange","target","toLowerCase","MoviesPage","movies","setMovies","page","setPage","useSearchParams","searchParams","setSearchParams","get","useEffect","Api","then","newArrayMovies","state","FilmList","filmes","length","Button","onLoadMore"],"sourceRoot":""}