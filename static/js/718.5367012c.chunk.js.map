{"version":3,"file":"static/js/718.5367012c.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Button/Button.module.css?ce6f","components/Button/Button.jsx","webpack://react-homework-template/./src/components/FilmList/FilmList.module.css?b497","components/FilmList/FilmList.jsx","service/api-fetch.js","components/SearchMovieForm/SearchMovieForm.jsx","views/MoviesPage/MoviesPage.jsx","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"button\":\"Button_button__wiIYs\"};","import style from '../Button/Button.module.css';\nexport default function Button({ onLoadMore }) {\n    // const onClick = (e) => { console.log(e.target.value)}\n    return (\n        <button type=\"button\" onClick={onLoadMore} className={style.button }>Download more</button>)\n    \n }","// extracted by mini-css-extract-plugin\nexport default {\"image\":\"FilmList_image__EaCd0\",\"list\":\"FilmList_list__C2ysn\",\"item\":\"FilmList_item__uEK9y\",\"title\":\"FilmList_title__gplOY\"};","\nimport { Link,  useNavigate,useLocation } from 'react-router-dom';\nimport style from './FilmList.module.css';\n// import Button from '../Button/Button';\n// import Film from '../Film/Film';\n\nexport default function FilmList({ filmes,value }) {\n    const location = useLocation();\n    let navigate = useNavigate();\n    console.log(location);\n    console.log(navigate);\n    // const onMovieClick = (id) => {\n    //     onClick(id);\n    //  }\n    console.log(filmes.length)\n    return (\n        <>\n            <ul className={style.list}>\n            {filmes.map(({ id, poster_path, title }) => (\n                <Link to=\n                    {{\n                        pathname: `/movies/${id}`,\n                        // state: { from: location },\n    //                     navigate:{\n    //   ...location,\n    //   search: `query=${value}`,\n    // }\n                        \n                    }} className={style.item } key={id}><li id={id} key={id}>\n                        <img src={!poster_path?\"../../../public/white-male-1847732_640.jpg\":`https://image.tmdb.org/t/p/original${poster_path}`} alt={title} className={style.image}  />\n                        <p className={ style.title}>{title}</p>\n            </li></Link>\n\n        \n))}\n            </ul>\n            {/* {filmes.length===20 && <Button/>} */}\n            </>\n\n    )\n\n}\n\n\n// import { useNavigate } from \"react-router-dom\";\n\n// function SignupForm() {\n//   let navigate = useNavigate();\n\n//   async function handleSubmit(event) {\n//     event.preventDefault();\n//     await submitForm(event.target);\n//     navigate(\"../success\", { replace: true });\n//   }\n\n//   return <form onSubmit={handleSubmit}>{/* ... */}</form>;\n\n\n\n            // <Film key={id} image={`https://image.tmdb.org/t/p/original${poster_path}`} title={title} alt={title} id={id} />","//   const [filmes, setFilmes] = useState([]);\nconst BASE_URL = \"https://api.themoviedb.org/3\";\nconst API_KEY = \"e32d0a5f8ee39ad2c612579abb31460d\"\n\nexport function fetchGetFilms(page) {\n    return fetch(\n        `${BASE_URL}/trending/movie/day?api_key=${API_KEY}&page=${page}`)\n        .then(response => {\n            if (response.ok) {\n                return response.json();\n            }\n            return Promise.rejected(\n                new Error(\"Please, try again\")\n            );\n        })\n     .then(response => response.results)\n        // .then(filmes => setFilmes([...filmes]));\n}\n \nexport function fetchGetMovie(query,page) {\n    return fetch(\n        ` ${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=${page}&include_adult=false `)\n            .then(response => {\n                if (response.ok) {\n                    return response.json();\n                }\n                return Promise.rejected(\n                    new Error(\"Please, try again\")\n                );\n            })\n        .then(response =>response.results)\n    \n }\n\nexport function getMovieById(movieId) {\n    return fetch(\n       ` ${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`)\n        .then(response => {\n            if (response.ok) {\n                return response.json();\n            }\n            return Promise.rejected(\n                    new Error(\"Please, try again\")\n                );\n        })\n    }\n export function getMovieCast(movieId) {\n        return fetch(\n            `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`)\n            .then(response => {\n                if (response.ok) {\n                    return response.json();\n                }\n                return Promise.rejected(\n                    new Error(\"Please, try again\")\n                );\n            })\n     .then(response => response.cast)\n }\n    \nexport function getMoviesReviews(movieId) {\n    return fetch(\n        `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`)\n        .then(response => {\n            if (response.ok) {\n                return response.json();\n            }\n            return Promise.rejected(\n                new Error(\"Please, try again\")\n            );\n        })\n    .then(response => response.results)\n }\n    // .then(response =>response.results)\n \n\n// const api = {\n//   fetchSearchName,\n// };\n// export default api;\n\n// const BASE_URL = \"https://api.themoviedb.org/3\";\n// const MY_KEY = \"e32d0a5f8ee39ad2c612579abb31460d\";\n\n// async function fetchErrorHandling(url = \"\", config = {}) {\n//   const response = await fetch(url, config);\n//   return response.ok\n//     ? await response.json()\n//     : Promise.reject(new Error(\"Something went wrong\"));\n// }\n// export async function fetchTrending() {\n//   return fetchErrorHandling(`${BASE_URL}/trending/movie/day?api_key=${MY_KEY}`);\n// }","import { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nexport default function SearchMovieForm({onSubmit }) {\n    const [query, setQuery] = useState('');\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if (query.trim() === '') {\n            return toast.warn('Введите название фильма!', {\n                theme: 'colored',\n            });\n        }\n        onSubmit(query);\n        setQuery('');\n        console.log(\"movie\");\n    }\n\n    const handleQueryChange=e => {\n        setQuery(e.target.value.toLowerCase());\n    }\n    return (\n        <form onSubmit={handleSubmit }>\n            <input \n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search movies\"\n                value={ query}\n            onChange={handleQueryChange}></input>\n            <button type=\"submit\">GO!</button>\n\n</form>\n\n\n\n\n    )\n\n\n\n\n\n\n }","import { useState, useEffect } from 'react';\nimport SearchMovieForm from '../../components/SearchMovieForm/SearchMovieForm';\nimport * as Api from '../../service/api-fetch';\nimport FilmList from '../../components/FilmList/FilmList';\nimport Button from '../../components/Button/Button';\n\nexport default function MoviesPage() {\n    const [movies, setMovies] = useState([]);\n    const [query, setQuery] = useState('');\n    const [page, setPage] = useState(1);\n\n    const onSearchMovie = query => setQuery(query);\n\n    useEffect(() => {\n        if (query === '') {\n            return;\n         }\n        setMovies([]);\n     Api.fetchGetMovie(query,page)\n        .then(newArrayMovies => {\n            setMovies(state => [...state, ...newArrayMovies]);\n            // setPage(page)\n        })\n    \n}, [query,page])\n    \n    const downloadMore = () => {\n        console.log('tap')\n        setPage(page=>page+1)\n     }\n//      useEffect(() => {\n//     if (searchName === '') {\n//       return\n//      }\n//     setStatus(Status.PENDING);\n//     setImages([]);\n//    getImages();\n//     scroll.scrollToTop();\n   \n//   }, [searchName]);\n\n    return (\n<>\n         \n            <SearchMovieForm onSubmit={onSearchMovie}></SearchMovieForm>\n            {movies && <FilmList filmes={movies}></FilmList>}\n            {movies.length === 20 && <Button onLoadMore={downloadMore}/>}\n</>\n    )\n\n\n\n\n\n }","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"names":["Button","onLoadMore","type","onClick","className","style","FilmList","filmes","location","value","useLocation","navigate","useNavigate","console","log","length","map","id","poster_path","title","to","pathname","src","alt","BASE_URL","API_KEY","fetchGetFilms","page","fetch","then","response","ok","json","Promise","rejected","Error","results","fetchGetMovie","query","getMovieById","movieId","getMovieCast","cast","getMoviesReviews","SearchMovieForm","onSubmit","useState","setQuery","e","preventDefault","trim","toast","theme","autoComplete","autoFocus","placeholder","onChange","target","toLowerCase","MoviesPage","movies","setMovies","setPage","useEffect","Api","newArrayMovies","state","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError"],"sourceRoot":""}